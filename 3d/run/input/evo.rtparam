# evolution-specific runtime parameters

# size of ghost region to add along artificial grid boundaries when splitting a grid across several nodes
ghost_width := [3 3 3]

# grid distribution method to use when running on multiple nodes
# see PAMR reference manual Table VI, AMRD reference manual Sec IV.C
gdm_grid_by_grid := 0
gdm_align := 0
gdm_no_overlap := 0

# if non-zero, the spatial boundaries in the given dimension are taken as periodic
periodic := [0 0 0]

# base-level grid resolution
base_shape := [129 129 129]

# minimum size a child grid can be split into
min_width := [17 17 17]

# sets a region on child grids adjacent to AMR boundaries on which to reinterpolate grid function values after child-level evolution is complete
re_interp_width := 4

# needed for RK4 implementation
t_interp_substeps := [0 0.5 0.5 1]

# spatial/temporal refinement ratio for all levels
rho_sp := 2
rho_tm := 2

# if non-zero, skip the very first regrid when evolving
skip_frg := 0

# method to use for generating initial AMR hierarchy
#  0 - take a single coarse step and use resulting truncation error estimates
#  1 - use a truncation error estimate from elliptic equations
id_method := 0

# node to use for I/O
io_node := 0

# clustering method to use (only 0 supported)
cls_method := 0

# if clusters are within this distance, merge them
cls_merge_dist := 8

# maximum depth of AMR hierarchy
max_lev := 1

# set to 1 to enable calculation of global norms in app_evo_residual()
calc_global_var_norms := 1

# minimum possible return value of the global norm of each grid function
global_var_norm_floor := 0.01

# maximum and minimum number of iterations per time step
evo_max_iter := 4
evo_min_iter := 4

# if non-zero, specify a separate stopping criteria for hyperbolic and elliptic equations
evo_ssc := 0

# how to initialize advanced time levels prior to evolution and iteration
#   0 - do nothing (use cyclic switching)
#   1 - straight copy of data from t^n to t^(n+1)
np1_initial_guess := 1

# truncation error threshold for determining placement of child grids in AMR hierarchy
TRE_max := 5e-4

# number of buffers cells to add to regions of high truncation error
TRE_buffer := 6

# number of buffer cells adjacent to interior boundaries in which to zero the truncation error estimate
TRE_ibc_a_buffer := 6

# variables for which a truncation error estimate should be computed prior to regridding
TRE_vars := [ "phi1" "phi2" "pi1" "pi2" "At" "Ax" "Ay" "Az" "Bt" "Bx" "By" "Bz" ]

# if non-zero, the truncation error estimate of each variable is divided by its L2-norm
TRE_norm := 0

# local CFL factor (dt=lambda*min(dx,dy,...))
lambda := 0.25

# number of base-level time steps to evolve for
steps := 768

# data output frequency on each level (uses RNPL syntax)
save_ivec := 1-*/1
#save_ivec_2 := 1-*/1
#save_ivec_3 := 1-*/1
#save_ivec_4 := 1-*/1
#save_ivec_5 := 1-*/1
#save_ivec_6 := 1-*/1

# if non-zero, use a 6th-order dissipation stencil
diss_use_6th_order := 1

# amount of dissipation to apply to tn_diss_vars and tnp1_diss_vars
eps_diss := 0.25

# amount of dissipation to apply to rg_diss_vars
rg_eps_diss := 0.25

# set to 1 to extend dissipation stencil all the way to grid boundaries
diss_bdy := 1

# optional regridding script
#  0 - do nothing (equivalent to commenting out this section)
#  1 - read from a file
#  2 - save to a file
regrid_script := 0
regrid_script_name = "out.rgs"
regrid_trace := 0

# regridding frequency on each level of the AMR hierarchy
regrid_interval := 20

# minimum AMR level beyond which regridding can occur
regrid_min_lev := 2

# variables to output at the frequency specified by save_ivec
save_2_vars := [ "modphi" "chi" "At" ]

# tag for output files
save_tag := "3d_AMR_"

# toggle for multigrid mode
mg_toggle := 0
